#include <iostream>
using namespace std;

char board[3][3] = {{'1','2','3'},{'4','5','6'},{'7','8','9'}};
char currentPlayer = 'X';

void drawBoard() {
    cout << "     |     |     " << endl;
    cout << "  " << board[0][0] << "  |  " << board[0][1] << "  |  " << board[0][2] << endl;
    cout << "_____|_____|_____" << endl;
    cout << "     |     |     " << endl;
    cout << "  " << board[1][0] << "  |  " << board[1][1] << "  |  " << board[1][2] << endl;
    cout << "_____|_____|_____" << endl;
    cout << "     |     |     " << endl;
    cout << "  " << board[2][0] << "  |  " << board[2][1] << "  |  " << board[2][2] << endl;
    cout << "     |     |     " << endl << endl;
}

bool isValidMove(int move) {
    switch(move) {
        case 1: return (board[0][0] == '1');
        case 2: return (board[0][1] == '2');
        case 3: return (board[0][2] == '3');
        case 4: return (board[1][0] == '4');
        case 5: return (board[1][1] == '5');
        case 6: return (board[1][2] == '6');
        case 7: return (board[2][0] == '7');
        case 8: return (board[2][1] == '8');
        case 9: return (board[2][2] == '9');
        default: return false;
    }
}

bool checkWin() {
    // Check rows
    for(int i = 0; i < 3; i++) {
        if(board[i][0] == board[i][1] && board[i][1] == board[i][2]) {
            return true;
        }
    }

    // Check columns
    for(int j = 0; j < 3; j++) {
        if(board[0][j] == board[1][j] && board[1][j] == board[2][j]) {
            return true;
        }
    }

    // Check diagonals
    if(board[0][0] == board[1][1] && board[1][1] == board[2][2]) {
        return true;
    }

    if(board[0][2] == board[1][1] && board[1][1] == board[2][0]) {
        return true;
    }

    return false;
}

bool checkTie() {
    for(int i = 0; i < 3; i++) {
        for(int j = 0; j < 3; j++) {
            if(board[i][j] != 'X' && board[i][j] != 'O') {
                return false;
            }
        }
    }

    return true;
}

void switchPlayer() {
    if(currentPlayer == 'X') {
        currentPlayer = 'O';
    } else {
        currentPlayer = 'X';
    }
}

int main() {
    int move;
    while(!checkWin() && !checkTie()) {
        drawBoard();
        cout << "Player " << currentPlayer << ", enter a number (1-9): ";
        cin >> move;

        if(isValidMove(move)) {
            // Update board
            switch(move) {
                case 1: board[0][0] = currentPlayer; break;
                case 2: board[0][1] = currentPlayer; break;
                case 3: board[0][2] = currentPlayer; break;
                case 4: board[1][0] = currentPlayer; break;
                case 5: board[1][1] = currentPlayer; break;
                case 6: board[1][2] = currentPlayer; break;
                case 7: board[2][0] = currentPlayer; break;
                case 8: board[2][1] = currentPlayer; break;
                case 9: board[2][2] = currentPlayer; break;
            }

            switchPlayer();
        } else {
            cout << "Invalid move. Please try again." << endl;
        }
    }

    drawBoard();

    if(checkWin()) {
        cout << "Congratulations! Player " << currentPlayer << " wins!" << endl;
    } else {
        cout << "It's a tie!" << endl;
    }

    return 0;
}
